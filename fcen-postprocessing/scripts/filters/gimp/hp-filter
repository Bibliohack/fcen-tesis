#!/bin/bash


# OUT="out"
# [[ -f "$OUT/$1" ]] && { echo "W: rm $OUT/$1"; rm "$OUT/$1"; }

{
cat <<EOF

(define (do-retouch filename outfile)
 (let* (
 (image (car (gimp-file-load RUN-NONINTERACTIVE filename filename)))
 (base-layer (car (gimp-image-merge-visible-layers image CLIP-TO-IMAGE)))
 (tmp-layer (car (gimp-layer-copy base-layer FALSE)))
 )
 ; (gimp-image-add-layer image base-layer 0)
 ; agregar layer a imagen  
 (gimp-image-add-layer image tmp-layer -1)
 (gimp-layer-set-visible tmp-layer TRUE)

 ; filtros
 ; aplicar gaussian
 (plug-in-gauss RUN-NONINTERACTIVE image tmp-layer 100 100 1)
 ; invertir
 (gimp-invert tmp-layer)
 ; opacidad a 50%
 (gimp-layer-set-opacity tmp-layer 50)

 ; merge
 (set! base-layer (car (gimp-image-merge-down image tmp-layer 0)))

 (gimp-levels-stretch base-layer)
 (gimp-levels base-layer 0 114 175 2.00 0 255 )
 ; (gimp-levels base-layer 0 114 175 1.20 0 255 )
 ; (gimp-levels base-layer 0 114 255 8.00 0 255 )

 ; desaturate & umbral
 ; (gimp-desaturate-full base-layer DESATURATE-LUMINOSITY)
 ; (gimp-threshold base-layer 120 255)

 ; guardar
 (file-tiff-save RUN-NONINTERACTIVE image base-layer outfile outfile 0)
 (gimp-image-delete image) ; ... or the memory will explode
 )
 )

 ;(gimp-message-set-handler 1) ; Messages to standard output

 ; (gimp-message "$1")
(do-retouch "$1" "$2")
(gimp-quit 0)
EOF

} | gimp -i -b -


#  (gimp-curves-spline base-layer HISTOGRAM-VALUE 6 #(0 0 147 44 255 122 ) )
#  (file-png-save2 RUN-NONINTERACTIVE image base-layer outfile outfile 0 9 0 0 0 0 0 0 1 )
#  ; (base-layer (car (gimp-image-merge-down image tmp-layer CLIP-TO-IMAGE)))

# http://stackoverflow.com/questions/14946695/shell-script-programming-for-gimp
# http://www.gimp.org/tutorials/Basic_Batch/
# http://www.gimp.org/docs/scheme_plugin/scheme-overview.html
# http://billauer.co.il/blog/2009/07/gimp-xcf-jpg-jpeg-convert-bash-script/
